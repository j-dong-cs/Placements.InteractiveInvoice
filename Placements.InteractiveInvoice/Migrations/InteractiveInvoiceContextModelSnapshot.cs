// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Placements.InteractiveInvoice.Data;

namespace Placements.InteractiveInvoice.Migrations
{
    [DbContext(typeof(InteractiveInvoiceContext))]
    partial class InteractiveInvoiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Placements.InteractiveInvoice.Models.Campaign", b =>
                {
                    b.Property<int>("CampaignID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CampaignName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CampaignID");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("Placements.InteractiveInvoice.Models.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LineitemID")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommentID");

                    b.HasIndex("LineitemID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Placements.InteractiveInvoice.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoiceID");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Placements.InteractiveInvoice.Models.InvoiceLineitem", b =>
                {
                    b.Property<int>("InvoiceID")
                        .HasColumnType("int");

                    b.Property<int>("LineitemID")
                        .HasColumnType("int");

                    b.HasKey("InvoiceID", "LineitemID");

                    b.HasIndex("LineitemID");

                    b.ToTable("InvoiceLineitems");
                });

            modelBuilder.Entity("Placements.InteractiveInvoice.Models.Lineitem", b =>
                {
                    b.Property<int>("LineitemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ActualAmount")
                        .HasColumnType("decimal(30,20)");

                    b.Property<decimal>("Adjustments")
                        .HasColumnType("decimal(30,20)");

                    b.Property<decimal>("BookedAmount")
                        .HasColumnType("decimal(30,20)");

                    b.Property<int>("CampaignID")
                        .HasColumnType("int");

                    b.Property<string>("CampaignName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineitemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LineitemID");

                    b.HasIndex("CampaignID");

                    b.ToTable("Lineitems");
                });

            modelBuilder.Entity("Placements.InteractiveInvoice.Models.Comment", b =>
                {
                    b.HasOne("Placements.InteractiveInvoice.Models.Lineitem", "Lineitem")
                        .WithMany("Comments")
                        .HasForeignKey("LineitemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Placements.InteractiveInvoice.Models.InvoiceLineitem", b =>
                {
                    b.HasOne("Placements.InteractiveInvoice.Models.Invoice", "Invoice")
                        .WithMany("InvoiceLineitems")
                        .HasForeignKey("InvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Placements.InteractiveInvoice.Models.Lineitem", "Lineitem")
                        .WithMany("InvoiceLineitems")
                        .HasForeignKey("LineitemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Placements.InteractiveInvoice.Models.Lineitem", b =>
                {
                    b.HasOne("Placements.InteractiveInvoice.Models.Campaign", "Campaign")
                        .WithMany("Lineitems")
                        .HasForeignKey("CampaignID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
