// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Placement.InteractiveInvoice.Data;

namespace Placement.InteractiveInvoice.Migrations
{
    [DbContext(typeof(InteractiveInvoiceContext))]
    partial class InteractiveInvoiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("Placement.InteractiveInvoice.Models.Campaign", b =>
                {
                    b.Property<int>("CampaignID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CampaignName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CampaignID");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("Placement.InteractiveInvoice.Models.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LineItemID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("CommentID");

                    b.HasIndex("LineItemID");

                    b.HasIndex("UserID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Placement.InteractiveInvoice.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("InvoiceID");

                    b.HasIndex("UserID");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Placement.InteractiveInvoice.Models.InvoiceLineItem", b =>
                {
                    b.Property<int>("InvoiceID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LineItemID")
                        .HasColumnType("INTEGER");

                    b.HasKey("InvoiceID", "LineItemID");

                    b.HasIndex("LineItemID");

                    b.ToTable("InvoiceLineItem");
                });

            modelBuilder.Entity("Placement.InteractiveInvoice.Models.LineItem", b =>
                {
                    b.Property<int>("LineItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ActualAmount")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Adjustments")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("BookedAmount")
                        .HasColumnType("TEXT");

                    b.Property<int>("CampaignID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CampaignName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LineItemName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LineItemID");

                    b.HasIndex("CampaignID");

                    b.ToTable("LineItems");
                });

            modelBuilder.Entity("Placement.InteractiveInvoice.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Placement.InteractiveInvoice.Models.Comment", b =>
                {
                    b.HasOne("Placement.InteractiveInvoice.Models.LineItem", "LineItem")
                        .WithMany("Comments")
                        .HasForeignKey("LineItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Placement.InteractiveInvoice.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Placement.InteractiveInvoice.Models.Invoice", b =>
                {
                    b.HasOne("Placement.InteractiveInvoice.Models.User", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Placement.InteractiveInvoice.Models.InvoiceLineItem", b =>
                {
                    b.HasOne("Placement.InteractiveInvoice.Models.LineItem", "LineItem")
                        .WithMany("InvoiceLineItems")
                        .HasForeignKey("InvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Placement.InteractiveInvoice.Models.Invoice", "Invoice")
                        .WithMany("InvoiceLineItems")
                        .HasForeignKey("LineItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Placement.InteractiveInvoice.Models.LineItem", b =>
                {
                    b.HasOne("Placement.InteractiveInvoice.Models.Campaign", "Campaign")
                        .WithMany("LineItems")
                        .HasForeignKey("CampaignID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
