@model LineItemPaginatedList<Placement.InteractiveInvoice.Models.LineItem>

@{
    ViewData["Title"] = "Index";
}

<h2>LineItem List</h2>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <div class="form-row">
            <input class="form-control col-md-4" type="text" name="SearchString" value="@ViewData["CurrentFilter"]" placeholder="Find by Name" />
            <input class="btn btn-outline-primary" type="submit" value="Search" />
            <a class="btn btn-outline-secondary" asp-action="Index">Clear</a>
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                LineItem ID <img src="/Assets/img/arrow-up-down.svg" alt="" width="25" height="25" title="Bootstrap">
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" value="LineItemName">LineItem Name</a>
            </th>
            <th>
                Campaign ID
            </th>
            <th>
                <a></a>Campaign Name
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["BookedAmtParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Booked Amount</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ActualAmtParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Actual Amount</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AdjustParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Adjustments</a>
            </th>
            <th>
                Subtotal
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                <a asp-controller="LineItem" asp-action="Details" asp-route-LineItemID="@item.LineItemID">
                    @Html.DisplayFor(modelItem => item.LineItemID)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LineItemName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CampaignID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CampaignName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BookedAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActualAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Adjustments)
            </td>
            <td>
               $@(Math.Round(item.ActualAmount + item.Adjustments, 2))
            </td>
        </tr>
        }
    </tbody>
</table>

@{
    var preDisabled = Model.HasPreviousPage ? "" : "disabled";
    var nextDisabled = Model.HasNextPage ? "" : "disabled";
 }


<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        <li class="page-item">
            <a class="page-link"
               asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               asp-route-pageNumber="1"
               aria-label="StartPage">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        <li class="page-item @preDisabled">
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               class="page-link" }>
                Previous
            </a>
        </li>
        @{
            var pagesPerView = 10;
            var startIndex = Model.PageIndex - pagesPerView / 2;
            startIndex = startIndex < 1 ? 1 : startIndex;
            var endIndex = startIndex + pagesPerView - 1;
            endIndex = endIndex > Model.TotalPages ? Model.TotalPages : endIndex;
         }
        @for (int i = startIndex; i <= endIndex; i++)
        {
            <li class="page-item">
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   asp-route-pageNumber="@i"
                   class="page-link">
                    @i
                </a>
            </li>
        }
        <li class="page-item @nextDisabled">
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               class="page-link" }>
                Next
            </a>
        </li>
        <li class="page-item">
            <a class="page-link"
               asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               asp-route-pageNumber="@Model.TotalPages"
               aria-label="EndPage">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>