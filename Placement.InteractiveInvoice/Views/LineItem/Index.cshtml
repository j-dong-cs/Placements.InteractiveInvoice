@model LineItemPaginatedList<Placement.InteractiveInvoice.Models.LineItem>

@{
    ViewData["Title"] = "Index";
}

<h2>LineItem List</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                LineItem ID
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]">LineItem Name</a>
            </th>
            <th>
                Campaign ID
            </th>
            <th>
                Campaign Name
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["BookedAmtParam"]">Booked Amount</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ActualAmtParam"]">Actual Amount</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AdjustParam"]">Adjustments</a>
            </th>
            <th>
                Subtotal
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                <a asp-controller="LineItem" asp-action="Details" asp-route-LineItemID="@item.LineItemID">
                    @Html.DisplayFor(modelItem => item.LineItemID)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LineItemName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CampaignID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CampaignName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BookedAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActualAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Adjustments)
            </td>
            <td>
               $@(Decimal.Round(item.ActualAmount + item.Adjustments, 2))
            </td>
        </tr>
        }
    </tbody>
</table>

@{
    var preDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}


<nav>
    <ul class="pagination">
        <li class="page-item @preDisabled"><a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex - 1)" class="page-link"}>Previous</a></li>

        <li class="page-item"><a class="page-link" href="#">1</a></li>
        <li class="page-item"><a class="page-link" href="#">2</a></li>
        <li class="page-item"><a class="page-link" href="#">3</a></li>

        <li class="page-item @nextDisabled"><a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex + 1)" class="page-link"}>Next</a></li>
    </ul>
</nav>